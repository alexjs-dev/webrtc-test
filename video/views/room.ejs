<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <script>
    const ROOM_ID = "<%= roomId %>"
  </script>
  <script src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.0.1/socket.io.js"></script>
  <title>WebRTC video test</title>
  <style>
    #video-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, 300px);
      grid-auto-rows: 300px;
    }
    
    video {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  </style>
</head>
<body>
  <div id="video-grid"></div>

  <script>
    const socket = io('http://localhost:3000');
    const VideoContainer = document.getElementById('video-grid')
    const peer = new Peer(); 
    const peerList = {}


    const video = document.createElement('video')
    video.muted = true

    const pushVideoStream = (video, stream) => {
      video.srcObject = stream
      video.addEventListener('loadedmetadata', () => {
        video.play()
      })
      VideoContainer.append(video)
    }

    navigator.mediaDevices.getUserMedia({
      video: true,
      audio: true
    }).then(stream => {
      pushVideoStream(video, stream) // push own video stream
      peer.on('call', call => {
        console.log('Received remote peer call', call)
        call.answer(stream)
        const remoteVideo = document.createElement('video')
        call.on('stream', remoteVideoStream => {
          pushVideoStream(remoteVideo, remoteVideoStream)
        })
      })

      socket.on('user-connected', userId => {
        connectToNewUser(userId, stream)
      })
    })


    peer.on('open', id => {
      console.log('Peer created, attempting to join:', ROOM_ID, id)
      socket.emit('join-room', ROOM_ID, id)
    })




  </script>
</body>
</html>